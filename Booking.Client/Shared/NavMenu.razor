@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<header class="p-3 text-bg-dark">
    <div class="container">
        <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start">
            <a href="/" class="d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none">
                <svg class="bi me-2" width="40" height="32" role="img" aria-label="Bootstrap"><use xlink:href="#bootstrap"></use></svg>
            </a>

            <ul class="nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0">
                <li><a href="#" class="nav-link px-2 text-white">Главная</a></li>
                <li><a href="#" class="nav-link px-2 text-white">Features</a></li>
            </ul>

            <AuthorizeView>
            <Authorized>
                Привет, @context.User.Identity.Name! 
                <button @onclick="BeginSignOut" type="button" class="btn btn-warning">Выйти</button>
            </Authorized>
                <NotAuthorized>
                    <button @onclick="BeginSignIn" type="button" class="btn btn-warning">Войти</button>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</header>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
    
    private async Task BeginSignIn(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/login");
    }
}